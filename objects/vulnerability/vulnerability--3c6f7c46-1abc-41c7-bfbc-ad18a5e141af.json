{
    "type": "bundle",
    "id": "bundle--edcc425f-4904-481e-874c-8a682d17a9a4",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--3c6f7c46-1abc-41c7-bfbc-ad18a5e141af",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-12-30T00:22:03.59613Z",
            "modified": "2024-12-30T00:22:03.59613Z",
            "name": "CVE-2024-56665",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf,perf: Fix invalid prog_array access in perf_event_detach_bpf_prog\n\nSyzbot reported [1] crash that happens for following tracing scenario:\n\n  - create tracepoint perf event with attr.inherit=1, attach it to the\n    process and set bpf program to it\n  - attached process forks -> chid creates inherited event\n\n    the new child event shares the parent's bpf program and tp_event\n    (hence prog_array) which is global for tracepoint\n\n  - exit both process and its child -> release both events\n  - first perf_event_detach_bpf_prog call will release tp_event->prog_array\n    and second perf_event_detach_bpf_prog will crash, because\n    tp_event->prog_array is NULL\n\nThe fix makes sure the perf_event_detach_bpf_prog checks prog_array\nis valid before it tries to remove the bpf program from it.\n\n[1] https://lore.kernel.org/bpf/Z1MR6dCIKajNS6nU@krava/T/#m91dbf0688221ec7a7fc95e896a7ef9ff93b0b8ad",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-56665"
                }
            ]
        }
    ]
}