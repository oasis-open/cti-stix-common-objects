{
    "type": "bundle",
    "id": "bundle--4d0c4a5d-08dc-4c2e-9c83-cb3d3b073b9b",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--29399b8b-27a6-4b99-8150-1a43287828ef",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-02T00:23:33.539511Z",
            "modified": "2025-05-02T00:23:33.539511Z",
            "name": "CVE-2022-49837",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix memory leaks in __check_func_call\n\nkmemleak reports this issue:\n\nunreferenced object 0xffff88817139d000 (size 2048):\n  comm \"test_progs\", pid 33246, jiffies 4307381979 (age 45851.820s)\n  hex dump (first 32 bytes):\n    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<0000000045f075f0>] kmalloc_trace+0x27/0xa0\n    [<0000000098b7c90a>] __check_func_call+0x316/0x1230\n    [<00000000b4c3c403>] check_helper_call+0x172e/0x4700\n    [<00000000aa3875b7>] do_check+0x21d8/0x45e0\n    [<000000001147357b>] do_check_common+0x767/0xaf0\n    [<00000000b5a595b4>] bpf_check+0x43e3/0x5bc0\n    [<0000000011e391b1>] bpf_prog_load+0xf26/0x1940\n    [<0000000007f765c0>] __sys_bpf+0xd2c/0x3650\n    [<00000000839815d6>] __x64_sys_bpf+0x75/0xc0\n    [<00000000946ee250>] do_syscall_64+0x3b/0x90\n    [<0000000000506b7f>] entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe root case here is: In function prepare_func_exit(), the callee is\nnot released in the abnormal scenario after \"state->curframe--;\". To\nfix, move \"state->curframe--;\" to the very bottom of the function,\nright when we free callee and reset frame[] pointer to NULL, as Andrii\nsuggested.\n\nIn addition, function __check_func_call() has a similar problem. In\nthe abnormal scenario before \"state->curframe++;\", the callee also\nshould be released by free_func_state().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49837"
                }
            ]
        }
    ]
}