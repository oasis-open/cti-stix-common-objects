{
    "type": "bundle",
    "id": "bundle--4b16c0fa-873d-49a1-8659-b24ee69a2bcd",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--1592f24a-da14-4c5b-ac14-99359271ca96",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-16T00:24:06.619635Z",
            "modified": "2025-05-16T00:24:06.619635Z",
            "name": "CVE-2025-47774",
            "description": "Vyper is the Pythonic Programming Language for the Ethereum Virtual Machine. In versions up to and including 0.4.2rc1, the `slice()` builtin can elide side effects when the output length is 0, and the source bytestring is a builtin (`msg.data` or `<address>.code`). The reason is that for these source locations, the check that `length >= 1` is skipped. The result is that a 0-length bytestring constructed with slice can be passed to `make_byte_array_copier`, which elides evaluation of its source argument when the max length is 0. The impact is that side effects in the `start` argument may be elided when the `length` argument is 0, e.g. `slice(msg.data, self.do_side_effect(), 0)`. The fix in pull request 4645 disallows any invocation of `slice()` with length 0, including for the ad hoc locations discussed in this advisory. The fix is expected to be part of version 0.4.2.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-47774"
                }
            ]
        }
    ]
}