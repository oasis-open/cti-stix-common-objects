{
    "type": "bundle",
    "id": "bundle--61b3a2b8-1ad4-4edb-b1e9-6c7bb6aad9b5",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--95caec7c-4671-4f6f-9ade-b758e5befbaa",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-01-22T00:20:53.462574Z",
            "modified": "2025-01-22T00:20:53.462574Z",
            "name": "CVE-2024-57934",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfgraph: Add READ_ONCE() when accessing fgraph_array[]\n\nIn __ftrace_return_to_handler(), a loop iterates over the fgraph_array[]\nelements, which are fgraph_ops. The loop checks if an element is a\nfgraph_stub to prevent using a fgraph_stub afterward.\n\nHowever, if the compiler reloads fgraph_array[] after this check, it might\nrace with an update to fgraph_array[] that introduces a fgraph_stub. This\ncould result in the stub being processed, but the stub contains a null\n\"func_hash\" field, leading to a NULL pointer dereference.\n\nTo ensure that the gops compared against the fgraph_stub matches the gops\nprocessed later, add a READ_ONCE(). A similar patch appears in commit\n63a8dfb (\"function_graph: Add READ_ONCE() when accessing fgraph_array[]\").",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-57934"
                }
            ]
        }
    ]
}