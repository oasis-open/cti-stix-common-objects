{
    "type": "bundle",
    "id": "bundle--f58b488c-5986-44fb-946e-0ff82cb9f99f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--116f16ba-de63-412d-9481-a050ab766070",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:21:47.485243Z",
            "modified": "2025-02-27T00:21:47.485243Z",
            "name": "CVE-2022-49613",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250: Fix PM usage_count for console handover\n\nWhen console is enabled, univ8250_console_setup() calls\nserial8250_console_setup() before .dev is set to uart_port. Therefore,\nit will not call pm_runtime_get_sync(). Later, when the actual driver\nis going to take over univ8250_console_exit() is called. As .dev is\nalready set, serial8250_console_exit() makes pm_runtime_put_sync() call\nwith usage count being zero triggering PM usage count warning\n(extra debug for univ8250_console_setup(), univ8250_console_exit(), and\nserial8250_register_ports()):\n\n[    0.068987] univ8250_console_setup ttyS0 nodev\n[    0.499670] printk: console [ttyS0] enabled\n[    0.717955] printk: console [ttyS0] printing thread started\n[    1.960163] serial8250_register_ports assigned dev for ttyS0\n[    1.976830] printk: console [ttyS0] disabled\n[    1.976888] printk: console [ttyS0] printing thread stopped\n[    1.977073] univ8250_console_exit ttyS0 usage:0\n[    1.977075] serial8250 serial8250: Runtime PM usage count underflow!\n[    1.977429] dw-apb-uart.6: ttyS0 at MMIO 0x4010006000 (irq = 33, base_baud = 115200) is a 16550A\n[    1.977812] univ8250_console_setup ttyS0 usage:2\n[    1.978167] printk: console [ttyS0] printing thread started\n[    1.978203] printk: console [ttyS0] enabled\n\nTo fix the issue, call pm_runtime_get_sync() in\nserial8250_register_ports() as soon as .dev is set for an uart_port\nif it has console enabled.\n\nThis problem became apparent only recently because 82586a721595 (\"PM:\nruntime: Avoid device usage count underflows\") added the warning\nprintout. I confirmed this problem also occurs with v5.18 (w/o the\nwarning printout, obviously).",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49613"
                }
            ]
        }
    ]
}