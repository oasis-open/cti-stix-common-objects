{
    "type": "bundle",
    "id": "bundle--e8f68c4b-da7b-42dd-aed9-074615fb043e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--56bf4c3b-99c7-40fc-b758-3b7ccd44836d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-10-22T00:20:55.280457Z",
            "modified": "2024-10-22T00:20:55.280457Z",
            "name": "CVE-2024-50030",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/ct: prevent UAF in send_recv()\n\nEnsure we serialize with completion side to prevent UAF with fence going\nout of scope on the stack, since we have no clue if it will fire after\nthe timeout before we can erase from the xa. Also we have some dependent\nloads and stores for which we need the correct ordering, and we lack the\nneeded barriers. Fix this by grabbing the ct->lock after the wait, which\nis also held by the completion side.\n\nv2 (Badal):\n - Also print done after acquiring the lock and seeing timeout.\n\n(cherry picked from commit 52789ce35c55ccd30c4b67b9cc5b2af55e0122ea)",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50030"
                }
            ]
        }
    ]
}