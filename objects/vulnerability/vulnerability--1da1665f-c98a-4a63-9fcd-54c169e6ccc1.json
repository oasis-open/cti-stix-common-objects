{
    "type": "bundle",
    "id": "bundle--283329a4-6f39-4fdb-bfde-666b1cc785e9",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--1da1665f-c98a-4a63-9fcd-54c169e6ccc1",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:21:47.522673Z",
            "modified": "2025-02-27T00:21:47.522673Z",
            "name": "CVE-2022-49678",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: bcm: brcmstb: pm: pm-arm: Fix refcount leak in brcmstb_pm_probe\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\n\nIn brcmstb_init_sram, it pass dn to of_address_to_resource(),\nof_address_to_resource() will call of_find_device_by_node() to take\nreference, so we should release the reference returned by\nof_find_matching_node().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49678"
                }
            ]
        }
    ]
}