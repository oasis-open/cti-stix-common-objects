{
    "type": "bundle",
    "id": "bundle--f17ee513-f4e5-4a0c-9e47-05f490335778",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c8bbe84b-a311-43d6-bb3b-af5cc9717ab6",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-03T00:23:02.581106Z",
            "modified": "2025-05-03T00:23:02.581106Z",
            "name": "CVE-2023-53136",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: fix struct pid leaks in OOB support\n\nsyzbot reported struct pid leak [1].\n\nIssue is that queue_oob() calls maybe_add_creds() which potentially\nholds a reference on a pid.\n\nBut skb->destructor is not set (either directly or by calling\nunix_scm_to_skb())\n\nThis means that subsequent kfree_skb() or consume_skb() would leak\nthis reference.\n\nIn this fix, I chose to fully support scm even for the OOB message.\n\n[1]\nBUG: memory leak\nunreferenced object 0xffff8881053e7f80 (size 128):\ncomm \"syz-executor242\", pid 5066, jiffies 4294946079 (age 13.220s)\nhex dump (first 32 bytes):\n01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\nbacktrace:\n[<ffffffff812ae26a>] alloc_pid+0x6a/0x560 kernel/pid.c:180\n[<ffffffff812718df>] copy_process+0x169f/0x26c0 kernel/fork.c:2285\n[<ffffffff81272b37>] kernel_clone+0xf7/0x610 kernel/fork.c:2684\n[<ffffffff812730cc>] __do_sys_clone+0x7c/0xb0 kernel/fork.c:2825\n[<ffffffff849ad699>] do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n[<ffffffff849ad699>] do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80\n[<ffffffff84a0008b>] entry_SYSCALL_64_after_hwframe+0x63/0xcd",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-53136"
                }
            ]
        }
    ]
}