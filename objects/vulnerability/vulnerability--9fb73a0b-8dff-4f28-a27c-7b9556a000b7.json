{
    "type": "bundle",
    "id": "bundle--228b3fee-2167-4024-9f97-d060bcb58bc3",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--9fb73a0b-8dff-4f28-a27c-7b9556a000b7",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-03T00:22:19.615111Z",
            "modified": "2025-04-03T00:22:19.615111Z",
            "name": "CVE-2025-21981",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix memory leak in aRFS after reset\n\nFix aRFS (accelerated Receive Flow Steering) structures memory leak by\nadding a checker to verify if aRFS memory is already allocated while\nconfiguring VSI. aRFS objects are allocated in two cases:\n- as part of VSI initialization (at probe), and\n- as part of reset handling\n\nHowever, VSI reconfiguration executed during reset involves memory\nallocation one more time, without prior releasing already allocated\nresources. This led to the memory leak with the following signature:\n\n[root@os-delivery ~]# cat /sys/kernel/debug/kmemleak\nunreferenced object 0xff3c1ca7252e6000 (size 8192):\n  comm \"kworker/0:0\", pid 8, jiffies 4296833052\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc 0):\n    [<ffffffff991ec485>] __kmalloc_cache_noprof+0x275/0x340\n    [<ffffffffc0a6e06a>] ice_init_arfs+0x3a/0xe0 [ice]\n    [<ffffffffc09f1027>] ice_vsi_cfg_def+0x607/0x850 [ice]\n    [<ffffffffc09f244b>] ice_vsi_setup+0x5b/0x130 [ice]\n    [<ffffffffc09c2131>] ice_init+0x1c1/0x460 [ice]\n    [<ffffffffc09c64af>] ice_probe+0x2af/0x520 [ice]\n    [<ffffffff994fbcd3>] local_pci_probe+0x43/0xa0\n    [<ffffffff98f07103>] work_for_cpu_fn+0x13/0x20\n    [<ffffffff98f0b6d9>] process_one_work+0x179/0x390\n    [<ffffffff98f0c1e9>] worker_thread+0x239/0x340\n    [<ffffffff98f14abc>] kthread+0xcc/0x100\n    [<ffffffff98e45a6d>] ret_from_fork+0x2d/0x50\n    [<ffffffff98e083ba>] ret_from_fork_asm+0x1a/0x30\n    ...",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-21981"
                }
            ]
        }
    ]
}