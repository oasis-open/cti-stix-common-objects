{
    "type": "bundle",
    "id": "bundle--365108ed-d97d-40ea-a2ed-c5fcd8a8888a",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--44494154-7969-4155-a049-e1e3b525e45e",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-01-16T00:20:48.092096Z",
            "modified": "2025-01-16T00:20:48.092096Z",
            "name": "CVE-2024-57891",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched_ext: Fix invalid irq restore in scx_ops_bypass()\n\nWhile adding outer irqsave/restore locking, 0e7ffff1b811 (\"scx: Fix raciness\nin scx_ops_bypass()\") forgot to convert an inner rq_unlock_irqrestore() to\nrq_unlock() which could re-enable IRQ prematurely leading to the following\nwarning:\n\n  raw_local_irq_restore() called with IRQs enabled\n  WARNING: CPU: 1 PID: 96 at kernel/locking/irqflag-debug.c:10 warn_bogus_irq_restore+0x30/0x40\n  ...\n  Sched_ext: create_dsq (enabling)\n  pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : warn_bogus_irq_restore+0x30/0x40\n  lr : warn_bogus_irq_restore+0x30/0x40\n  ...\n  Call trace:\n   warn_bogus_irq_restore+0x30/0x40 (P)\n   warn_bogus_irq_restore+0x30/0x40 (L)\n   scx_ops_bypass+0x224/0x3b8\n   scx_ops_enable.isra.0+0x2c8/0xaa8\n   bpf_scx_reg+0x18/0x30\n  ...\n  irq event stamp: 33739\n  hardirqs last  enabled at (33739): [<ffff8000800b699c>] scx_ops_bypass+0x174/0x3b8\n  hardirqs last disabled at (33738): [<ffff800080d48ad4>] _raw_spin_lock_irqsave+0xb4/0xd8\n\nDrop the stray _irqrestore().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-57891"
                }
            ]
        }
    ]
}