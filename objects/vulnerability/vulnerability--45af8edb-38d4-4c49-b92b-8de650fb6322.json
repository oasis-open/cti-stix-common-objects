{
    "type": "bundle",
    "id": "bundle--f6e58451-6a18-4897-b813-cdf36a1ec641",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--45af8edb-38d4-4c49-b92b-8de650fb6322",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-12-03T00:23:25.391061Z",
            "modified": "2024-12-03T00:23:25.391061Z",
            "name": "CVE-2024-53119",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio/vsock: Fix accept_queue memory leak\n\nAs the final stages of socket destruction may be delayed, it is possible\nthat virtio_transport_recv_listen() will be called after the accept_queue\nhas been flushed, but before the SOCK_DONE flag has been set. As a result,\nsockets enqueued after the flush would remain unremoved, leading to a\nmemory leak.\n\nvsock_release\n  __vsock_release\n    lock\n    virtio_transport_release\n      virtio_transport_close\n        schedule_delayed_work(close_work)\n    sk_shutdown = SHUTDOWN_MASK\n(!) flush accept_queue\n    release\n                                        virtio_transport_recv_pkt\n                                          vsock_find_bound_socket\n                                          lock\n                                          if flag(SOCK_DONE) return\n                                          virtio_transport_recv_listen\n                                            child = vsock_create_connected\n                                      (!)   vsock_enqueue_accept(child)\n                                          release\nclose_work\n  lock\n  virtio_transport_do_close\n    set_flag(SOCK_DONE)\n    virtio_transport_remove_sock\n      vsock_remove_sock\n        vsock_remove_bound\n  release\n\nIntroduce a sk_shutdown check to disallow vsock_enqueue_accept() during\nsocket destruction.\n\nunreferenced object 0xffff888109e3f800 (size 2040):\n  comm \"kworker/5:2\", pid 371, jiffies 4294940105\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    28 00 0b 40 00 00 00 00 00 00 00 00 00 00 00 00  (..@............\n  backtrace (crc 9e5f4e84):\n    [<ffffffff81418ff1>] kmem_cache_alloc_noprof+0x2c1/0x360\n    [<ffffffff81d27aa0>] sk_prot_alloc+0x30/0x120\n    [<ffffffff81d2b54c>] sk_alloc+0x2c/0x4b0\n    [<ffffffff81fe049a>] __vsock_create.constprop.0+0x2a/0x310\n    [<ffffffff81fe6d6c>] virtio_transport_recv_pkt+0x4dc/0x9a0\n    [<ffffffff81fe745d>] vsock_loopback_work+0xfd/0x140\n    [<ffffffff810fc6ac>] process_one_work+0x20c/0x570\n    [<ffffffff810fce3f>] worker_thread+0x1bf/0x3a0\n    [<ffffffff811070dd>] kthread+0xdd/0x110\n    [<ffffffff81044fdd>] ret_from_fork+0x2d/0x50\n    [<ffffffff8100785a>] ret_from_fork_asm+0x1a/0x30",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-53119"
                }
            ]
        }
    ]
}