{
    "type": "bundle",
    "id": "bundle--539eeb22-9818-4bce-b2f4-903b6f0ab09f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--aa58d250-d57c-4767-81a2-27809c3f4693",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-06T00:20:26.753961Z",
            "modified": "2024-11-06T00:20:26.753961Z",
            "name": "CVE-2024-51746",
            "description": "Gitsign is a keyless Sigstore to signing tool for Git commits with your a GitHub / OIDC identity. gitsign may select the wrong Rekor entry to use during online verification when multiple entries are returned by the log. gitsign uses Rekor's search API to fetch entries that apply to a signature being verified. The parameters used for the search are the public key and the payload. The search API returns entries that match either condition rather than both. When gitsign's credential cache is used, there can be multiple entries that use the same ephemeral keypair / signing certificate. As gitsign assumes both conditions are matched by Rekor, there is no additional validation that the entry's hash matches the payload being verified, meaning that the wrong entry can be used to successfully pass verification. Impact is minimal as while gitsign does not match the payload against the entry, it does ensure that the certificate matches. This would need to be exploited during the certificate validity window (10 minutes) by the key holder.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-51746"
                }
            ]
        }
    ]
}