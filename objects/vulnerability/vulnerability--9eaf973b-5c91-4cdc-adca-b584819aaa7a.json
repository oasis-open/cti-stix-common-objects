{
    "type": "bundle",
    "id": "bundle--c852d597-8615-4129-ad0b-a09be8e7727e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--9eaf973b-5c91-4cdc-adca-b584819aaa7a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-10T00:22:00.544502Z",
            "modified": "2024-11-10T00:22:00.544502Z",
            "name": "CVE-2024-50227",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthunderbolt: Fix KASAN reported stack out-of-bounds read in tb_retimer_scan()\n\nKASAN reported following issue:\n\n BUG: KASAN: stack-out-of-bounds in tb_retimer_scan+0xffe/0x1550 [thunderbolt]\n Read of size 4 at addr ffff88810111fc1c by task kworker/u56:0/11\n CPU: 0 UID: 0 PID: 11 Comm: kworker/u56:0 Tainted: G     U             6.11.0+ #1387\n Tainted: [U]=USER\n Workqueue: thunderbolt0 tb_handle_hotplug [thunderbolt]\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x6c/0x90\n  print_report+0xd1/0x630\n  kasan_report+0xdb/0x110\n  __asan_report_load4_noabort+0x14/0x20\n  tb_retimer_scan+0xffe/0x1550 [thunderbolt]\n  tb_scan_port+0xa6f/0x2060 [thunderbolt]\n  tb_handle_hotplug+0x17b1/0x3080 [thunderbolt]\n  process_one_work+0x626/0x1100\n  worker_thread+0x6c8/0xfa0\n  kthread+0x2c8/0x3a0\n  ret_from_fork+0x3a/0x80\n  ret_from_fork_asm+0x1a/0x30\n\nThis happens because the loop variable still gets incremented by one so\nmax becomes 3 instead of 2, and this makes the second loop read past the\nthe array declared on the stack.\n\nFix this by assigning to max directly in the loop body.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50227"
                }
            ]
        }
    ]
}