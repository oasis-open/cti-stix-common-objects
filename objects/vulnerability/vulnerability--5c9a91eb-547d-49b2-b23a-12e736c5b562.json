{
    "type": "bundle",
    "id": "bundle--8ddf3388-f98d-4a3a-ab4e-88472da09eba",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--5c9a91eb-547d-49b2-b23a-12e736c5b562",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-30T00:18:44.868733Z",
            "modified": "2024-07-30T00:18:44.868733Z",
            "name": "CVE-2024-41080",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: fix possible deadlock in io_register_iowq_max_workers()\n\nThe io_register_iowq_max_workers() function calls io_put_sq_data(),\nwhich acquires the sqd->lock without releasing the uring_lock.\nSimilar to the commit 009ad9f0c6ee (\"io_uring: drop ctx->uring_lock\nbefore acquiring sqd->lock\"), this can lead to a potential deadlock\nsituation.\n\nTo resolve this issue, the uring_lock is released before calling\nio_put_sq_data(), and then it is re-acquired after the function call.\n\nThis change ensures that the locks are acquired in the correct\norder, preventing the possibility of a deadlock.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-41080"
                }
            ]
        }
    ]
}