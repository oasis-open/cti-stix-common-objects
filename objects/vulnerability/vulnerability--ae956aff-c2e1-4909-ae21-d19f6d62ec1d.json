{
    "type": "bundle",
    "id": "bundle--0ce4d178-dd65-413f-8a33-b4637add85a8",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--ae956aff-c2e1-4909-ae21-d19f6d62ec1d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-10-22T00:20:55.135541Z",
            "modified": "2024-10-22T00:20:55.135541Z",
            "name": "CVE-2024-47757",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential oob read in nilfs_btree_check_delete()\n\nThe function nilfs_btree_check_delete(), which checks whether degeneration\nto direct mapping occurs before deleting a b-tree entry, causes memory\naccess outside the block buffer when retrieving the maximum key if the\nroot node has no entries.\n\nThis does not usually happen because b-tree mappings with 0 child nodes\nare never created by mkfs.nilfs2 or nilfs2 itself.  However, it can happen\nif the b-tree root node read from a device is configured that way, so fix\nthis potential issue by adding a check for that case.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-47757"
                }
            ]
        }
    ]
}