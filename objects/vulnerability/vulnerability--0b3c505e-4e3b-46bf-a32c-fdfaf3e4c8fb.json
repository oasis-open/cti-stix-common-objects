{
    "type": "bundle",
    "id": "bundle--03262ff0-8c0d-4990-99f1-f8969bce438d",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--0b3c505e-4e3b-46bf-a32c-fdfaf3e4c8fb",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-08-18T00:20:21.054394Z",
            "modified": "2024-08-18T00:20:21.054394Z",
            "name": "CVE-2024-42279",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer\n\nWhile transmitting with rx_len == 0, the RX FIFO is not going to be\nemptied in the interrupt handler. A subsequent transfer could then\nread crap from the previous transfer out of the RX FIFO into the\nstart RX buffer. The core provides a register that will empty the RX and\nTX FIFOs, so do that before each transfer.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-42279"
                }
            ]
        }
    ]
}