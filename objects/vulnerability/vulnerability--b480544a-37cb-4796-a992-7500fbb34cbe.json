{
    "type": "bundle",
    "id": "bundle--7ee468d1-3a5f-4f7c-afe4-7298fb2c80d0",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b480544a-37cb-4796-a992-7500fbb34cbe",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:21:47.441359Z",
            "modified": "2025-02-27T00:21:47.441359Z",
            "name": "CVE-2022-49622",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: avoid skb access on nf_stolen\n\nWhen verdict is NF_STOLEN, the skb might have been freed.\n\nWhen tracing is enabled, this can result in a use-after-free:\n1. access to skb->nf_trace\n2. access to skb->mark\n3. computation of trace id\n4. dump of packet payload\n\nTo avoid 1, keep a cached copy of skb->nf_trace in the\ntrace state struct.\nRefresh this copy whenever verdict is != STOLEN.\n\nAvoid 2 by skipping skb->mark access if verdict is STOLEN.\n\n3 is avoided by precomputing the trace id.\n\nOnly dump the packet when verdict is not \"STOLEN\".",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49622"
                }
            ]
        }
    ]
}