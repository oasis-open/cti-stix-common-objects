{
    "type": "bundle",
    "id": "bundle--ab44c53d-56a1-4d7d-8f02-7739fb878eeb",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--48792d48-b8c6-4e75-8e20-273bda2288d3",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-01-16T00:20:48.094692Z",
            "modified": "2025-01-16T00:20:48.094692Z",
            "name": "CVE-2024-57886",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/damon/core: fix new damon_target objects leaks on damon_commit_targets()\n\nPatch series \"mm/damon/core: fix memory leaks and ignored inputs from\ndamon_commit_ctx()\".\n\nDue to two bugs in damon_commit_targets() and damon_commit_schemes(),\nwhich are called from damon_commit_ctx(), some user inputs can be ignored,\nand some mmeory objects can be leaked.  Fix those.\n\nNote that only DAMON sysfs interface users are affected.  Other DAMON core\nAPI user modules that more focused more on simple and dedicated production\nusages, including DAMON_RECLAIM and DAMON_LRU_SORT are not using the buggy\nfunction in the way, so not affected.\n\n\nThis patch (of 2):\n\nWhen new DAMON targets are added via damon_commit_targets(), the newly\ncreated targets are not deallocated when updating the internal data\n(damon_commit_target()) is failed.  Worse yet, even if the setup is\nsuccessfully done, the new target is not linked to the context.  Hence,\nthe new targets are always leaked regardless of the internal data setup\nfailure.  Fix the leaks.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-57886"
                }
            ]
        }
    ]
}