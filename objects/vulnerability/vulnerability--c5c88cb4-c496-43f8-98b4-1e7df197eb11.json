{
    "type": "bundle",
    "id": "bundle--09493b52-e7f6-45f9-b116-2ae0dd84efde",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c5c88cb4-c496-43f8-98b4-1e7df197eb11",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-10T00:22:00.536714Z",
            "modified": "2024-11-10T00:22:00.536714Z",
            "name": "CVE-2024-50219",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/page_alloc: let GFP_ATOMIC order-0 allocs access highatomic reserves\n\nUnder memory pressure it's possible for GFP_ATOMIC order-0 allocations to\nfail even though free pages are available in the highatomic reserves. \nGFP_ATOMIC allocations cannot trigger unreserve_highatomic_pageblock()\nsince it's only run from reclaim.\n\nGiven that such allocations will pass the watermarks in\n__zone_watermark_unusable_free(), it makes sense to fallback to highatomic\nreserves the same way that ALLOC_OOM can.\n\nThis fixes order-0 page allocation failures observed on Cloudflare's fleet\nwhen handling network packets:\n\n  kswapd1: page allocation failure: order:0, mode:0x820(GFP_ATOMIC),\n  nodemask=(null),cpuset=/,mems_allowed=0-7\n  CPU: 10 PID: 696 Comm: kswapd1 Kdump: loaded Tainted: G           O 6.6.43-CUSTOM #1\n  Hardware name: MACHINE\n  Call Trace:\n   <IRQ>\n   dump_stack_lvl+0x3c/0x50\n   warn_alloc+0x13a/0x1c0\n   __alloc_pages_slowpath.constprop.0+0xc9d/0xd10\n   __alloc_pages+0x327/0x340\n   __napi_alloc_skb+0x16d/0x1f0\n   bnxt_rx_page_skb+0x96/0x1b0 [bnxt_en]\n   bnxt_rx_pkt+0x201/0x15e0 [bnxt_en]\n   __bnxt_poll_work+0x156/0x2b0 [bnxt_en]\n   bnxt_poll+0xd9/0x1c0 [bnxt_en]\n   __napi_poll+0x2b/0x1b0\n   bpf_trampoline_6442524138+0x7d/0x1000\n   __napi_poll+0x5/0x1b0\n   net_rx_action+0x342/0x740\n   handle_softirqs+0xcf/0x2b0\n   irq_exit_rcu+0x6c/0x90\n   sysvec_apic_timer_interrupt+0x72/0x90\n   </IRQ>\n\n[mfleming@cloudflare.com: update comment]\n  Link: https://lkml.kernel.org/r/20241015125158.3597702-1-matt@readmodwrite.com",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50219"
                }
            ]
        }
    ]
}