{
    "type": "bundle",
    "id": "bundle--27908afe-ac02-4b50-96bf-f4fd2ff82b95",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--90d3b70a-d442-448b-b13c-91822f3979b1",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-06-03T00:24:45.457385Z",
            "modified": "2025-06-03T00:24:45.457385Z",
            "name": "CVE-2025-48994",
            "description": "SignXML is an implementation of the W3C XML Signature standard in Python. When verifying signatures with X509 certificate validation turned off and HMAC shared secret set (`signxml.XMLVerifier.verify(require_x509=False, hmac_key=...`), versions of SignXML prior to 4.0.4 are vulnerable to a potential algorithm confusion attack. Unless the user explicitly limits the expected signature algorithms using the `signxml.XMLVerifier.verify(expect_config=...)` setting, an attacker may supply a signature unexpectedly signed with a key other than the provided HMAC key, using a different (asymmetric key) signature algorithm. Starting with SignXML 4.0.4, specifying `hmac_key` causes the set of accepted signature algorithms to be restricted to HMAC only, if not already restricted by the user.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-48994"
                }
            ]
        }
    ]
}