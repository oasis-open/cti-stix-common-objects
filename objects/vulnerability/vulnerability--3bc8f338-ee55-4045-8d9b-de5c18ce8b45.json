{
    "type": "bundle",
    "id": "bundle--da897bd1-83a0-4f4a-83d9-ebae9f4bf3b1",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--3bc8f338-ee55-4045-8d9b-de5c18ce8b45",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-16T00:23:22.47452Z",
            "modified": "2025-04-16T00:23:22.47452Z",
            "name": "CVE-2025-24358",
            "description": "gorilla/csrf provides Cross Site Request Forgery (CSRF) prevention middleware for Go web applications & services. Prior to 1.7.2, gorilla/csrf does not validate the Origin header against an allowlist. Its executes its validation of the Referer header for cross-origin requests only when it believes the request is being served over TLS. It determines this by inspecting the r.URL.Scheme value. However, this value is never populated for \"server\" requests per the Go spec, and so this check does not run in practice. This vulnerability allows an attacker who has gained XSS on a subdomain or top level domain to perform authenticated form submissions against gorilla/csrf protected targets that share the same top level domain. This vulnerability is fixed in 1.7.2.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-24358"
                }
            ]
        }
    ]
}