{
    "type": "bundle",
    "id": "bundle--77d83af0-8622-4a1b-a33d-20e4605cf58a",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--668322c4-622f-4cea-bdef-4c5a1e8ecfde",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-10-22T00:20:56.278014Z",
            "modified": "2024-10-22T00:20:56.278014Z",
            "name": "CVE-2024-49876",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: fix UAF around queue destruction\n\nWe currently do stuff like queuing the final destruction step on a\nrandom system wq, which will outlive the driver instance. With bad\ntiming we can teardown the driver with one or more work workqueue still\nbeing alive leading to various UAF splats. Add a fini step to ensure\nuser queues are properly torn down. At this point GuC should already be\nnuked so queue itself should no longer be referenced from hw pov.\n\nv2 (Matt B)\n - Looks much safer to use a waitqueue and then just wait for the\n   xa_array to become empty before triggering the drain.\n\n(cherry picked from commit 861108666cc0e999cffeab6aff17b662e68774e3)",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-49876"
                }
            ]
        }
    ]
}