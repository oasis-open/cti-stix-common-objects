{
    "type": "bundle",
    "id": "bundle--1e70664e-78c9-4f8a-99fe-5f8a7d526d8d",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--899d6b11-e01f-491b-8bfa-f8eb4fdb496b",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-10-22T00:20:56.438123Z",
            "modified": "2024-10-22T00:20:56.438123Z",
            "name": "CVE-2024-49938",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath9k_htc: Use __skb_set_length() for resetting urb before resubmit\n\nSyzbot points out that skb_trim() has a sanity check on the existing length of\nthe skb, which can be uninitialised in some error paths. The intent here is\nclearly just to reset the length to zero before resubmitting, so switch to\ncalling __skb_set_length(skb, 0) directly. In addition, __skb_set_length()\nalready contains a call to skb_reset_tail_pointer(), so remove the redundant\ncall.\n\nThe syzbot report came from ath9k_hif_usb_reg_in_cb(), but there's a similar\nusage of skb_trim() in ath9k_hif_usb_rx_cb(), change both while we're at it.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-49938"
                }
            ]
        }
    ]
}