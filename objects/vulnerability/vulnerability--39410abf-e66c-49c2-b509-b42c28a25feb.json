{
    "type": "bundle",
    "id": "bundle--b05a3d00-b0c3-4dc4-b57c-5d89e2835745",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--39410abf-e66c-49c2-b509-b42c28a25feb",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:21:47.280404Z",
            "modified": "2025-02-27T00:21:47.280404Z",
            "name": "CVE-2022-49562",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Use __try_cmpxchg_user() to update guest PTE A/D bits\n\nUse the recently introduced __try_cmpxchg_user() to update guest PTE A/D\nbits instead of mapping the PTE into kernel address space.  The VM_PFNMAP\npath is broken as it assumes that vm_pgoff is the base pfn of the mapped\nVMA range, which is conceptually wrong as vm_pgoff is the offset relative\nto the file and has nothing to do with the pfn.  The horrific hack worked\nfor the original use case (backing guest memory with /dev/mem), but leads\nto accessing \"random\" pfns for pretty much any other VM_PFNMAP case.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49562"
                }
            ]
        }
    ]
}