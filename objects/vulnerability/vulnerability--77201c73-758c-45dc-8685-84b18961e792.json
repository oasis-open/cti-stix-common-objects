{
    "type": "bundle",
    "id": "bundle--23838105-f998-4f15-b264-3bacf2f59f42",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--77201c73-758c-45dc-8685-84b18961e792",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-08-18T00:20:21.074171Z",
            "modified": "2024-08-18T00:20:21.074171Z",
            "name": "CVE-2024-42315",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nexfat: fix potential deadlock on __exfat_get_dentry_set\n\nWhen accessing a file with more entries than ES_MAX_ENTRY_NUM, the bh-array\nis allocated in __exfat_get_entry_set. The problem is that the bh-array is\nallocated with GFP_KERNEL. It does not make sense. In the following cases,\na deadlock for sbi->s_lock between the two processes may occur.\n\n       CPU0                CPU1\n       ----                ----\n  kswapd\n   balance_pgdat\n    lock(fs_reclaim)\n                      exfat_iterate\n                       lock(&sbi->s_lock)\n                       exfat_readdir\n                        exfat_get_uniname_from_ext_entry\n                         exfat_get_dentry_set\n                          __exfat_get_dentry_set\n                           kmalloc_array\n                            ...\n                            lock(fs_reclaim)\n    ...\n    evict\n     exfat_evict_inode\n      lock(&sbi->s_lock)\n\nTo fix this, let's allocate bh-array with GFP_NOFS.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-42315"
                }
            ]
        }
    ]
}