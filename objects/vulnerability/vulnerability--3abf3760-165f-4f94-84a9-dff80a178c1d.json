{
    "type": "bundle",
    "id": "bundle--e7d0d20e-ad5c-47aa-b1ee-eeb08cf6d2d3",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--3abf3760-165f-4f94-84a9-dff80a178c1d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-08-23T00:18:25.193734Z",
            "modified": "2024-08-23T00:18:25.193734Z",
            "name": "CVE-2022-48933",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memory leak during stateful obj update\n\nstateful objects can be updated from the control plane.\nThe transaction logic allocates a temporary object for this purpose.\n\nThe ->init function was called for this object, so plain kfree() leaks\nresources. We must call ->destroy function of the object.\n\nnft_obj_destroy does this, but it also decrements the module refcount,\nbut the update path doesn't increment it.\n\nTo avoid special-casing the update object release, do module_get for\nthe update case too and release it via nft_obj_destroy().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-48933"
                }
            ]
        }
    ]
}