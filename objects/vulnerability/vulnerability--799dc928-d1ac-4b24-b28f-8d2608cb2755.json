{
    "type": "bundle",
    "id": "bundle--14a130ea-2854-4353-8d38-96c2c23e32ed",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--799dc928-d1ac-4b24-b28f-8d2608cb2755",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:21:47.626183Z",
            "modified": "2025-02-27T00:21:47.626183Z",
            "name": "CVE-2022-49425",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix dereference of stale list iterator after loop body\n\nThe list iterator variable will be a bogus pointer if no break was hit.\nDereferencing it (cur->page in this case) could load an out-of-bounds/undefined\nvalue making it unsafe to use that in the comparision to determine if the\nspecific element was found.\n\nSince 'cur->page' *can* be out-ouf-bounds it cannot be guaranteed that\nby chance (or intention of an attacker) it matches the value of 'page'\neven though the correct element was not found.\n\nThis is fixed by using a separate list iterator variable for the loop\nand only setting the original variable if a suitable element was found.\nThen determing if the element was found is simply checking if the\nvariable is set.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49425"
                }
            ]
        }
    ]
}