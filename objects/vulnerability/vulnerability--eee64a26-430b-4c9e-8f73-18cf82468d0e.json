{
    "type": "bundle",
    "id": "bundle--deef594b-6d40-4f99-943c-64a835f6a915",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--eee64a26-430b-4c9e-8f73-18cf82468d0e",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-09-05T00:19:27.126611Z",
            "modified": "2024-09-05T00:19:27.126611Z",
            "name": "CVE-2024-44965",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix pti_clone_pgtable() alignment assumption\n\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\n\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\n\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\n\nUse the correct increment form for addr to avoid alignment\nassumptions.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-44965"
                }
            ]
        }
    ]
}