{
    "type": "bundle",
    "id": "bundle--ef58bb7b-ed28-4abc-9f4b-d6f889974195",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--0437923e-8314-45bb-b497-06a0a4218a11",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-13T00:21:12.539653Z",
            "modified": "2025-02-13T00:21:12.539653Z",
            "name": "CVE-2025-21694",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/proc: fix softlockup in __read_vmcore (part 2)\n\nSince commit 5cbcb62dddf5 (\"fs/proc: fix softlockup in __read_vmcore\") the\nnumber of softlockups in __read_vmcore at kdump time have gone down, but\nthey still happen sometimes.\n\nIn a memory constrained environment like the kdump image, a softlockup is\nnot just a harmless message, but it can interfere with things like RCU\nfreeing memory, causing the crashdump to get stuck.\n\nThe second loop in __read_vmcore has a lot more opportunities for natural\nsleep points, like scheduling out while waiting for a data write to\nhappen, but apparently that is not always enough.\n\nAdd a cond_resched() to the second loop in __read_vmcore to (hopefully)\nget rid of the softlockups.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-21694"
                }
            ]
        }
    ]
}