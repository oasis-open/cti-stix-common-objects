{
    "type": "bundle",
    "id": "bundle--32aeae2d-207a-4663-beae-60c699a3bae8",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--2a8733c3-f204-4a99-9717-6d050e93becd",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:21:47.692319Z",
            "modified": "2025-02-27T00:21:47.692319Z",
            "name": "CVE-2022-49210",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nMIPS: pgalloc: fix memory leak caused by pgd_free()\n\npgd page is freed by generic implementation pgd_free() since commit\nf9cb654cb550 (\"asm-generic: pgalloc: provide generic pgd_free()\"),\nhowever, there are scenarios that the system uses more than one page as\nthe pgd table, in such cases the generic implementation pgd_free() won't\nbe applicable anymore. For example, when PAGE_SIZE_4KB is enabled and\nMIPS_VA_BITS_48 is not enabled in a 64bit system, the macro \"PGD_ORDER\"\nwill be set as \"1\", which will cause allocating two pages as the pgd\ntable. Well, at the same time, the generic implementation pgd_free()\njust free one pgd page, which will result in the memory leak.\n\nThe memory leak can be easily detected by executing shell command:\n\"while true; do ls > /dev/null; grep MemFree /proc/meminfo; done\"",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49210"
                }
            ]
        }
    ]
}