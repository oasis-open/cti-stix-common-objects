{
    "type": "bundle",
    "id": "bundle--fe7c2438-168d-4626-8e0a-d8f8ec823654",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c10d692c-9c21-4381-b49d-1abb6c11a93f",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-09-05T00:19:27.156206Z",
            "modified": "2024-09-05T00:19:27.156206Z",
            "name": "CVE-2024-44948",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mtrr: Check if fixed MTRRs exist before saving them\n\nMTRRs have an obsolete fixed variant for fine grained caching control\nof the 640K-1MB region that uses separate MSRs. This fixed variant has\na separate capability bit in the MTRR capability MSR.\n\nSo far all x86 CPUs which support MTRR have this separate bit set, so it\nwent unnoticed that mtrr_save_state() does not check the capability bit\nbefore accessing the fixed MTRR MSRs.\n\nThough on a CPU that does not support the fixed MTRR capability this\nresults in a #GP.  The #GP itself is harmless because the RDMSR fault is\nhandled gracefully, but results in a WARN_ON().\n\nAdd the missing capability check to prevent this.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-44948"
                }
            ]
        }
    ]
}