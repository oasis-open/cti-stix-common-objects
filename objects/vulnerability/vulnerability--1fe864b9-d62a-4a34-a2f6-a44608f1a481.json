{
    "type": "bundle",
    "id": "bundle--81a75567-16f1-4b61-a0e0-9d7d8fef4e96",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--1fe864b9-d62a-4a34-a2f6-a44608f1a481",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-01-16T00:20:48.137883Z",
            "modified": "2025-01-16T00:20:48.137883Z",
            "name": "CVE-2024-57841",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix memory leak in tcp_conn_request()\n\nIf inet_csk_reqsk_queue_hash_add() return false, tcp_conn_request() will\nreturn without free the dst memory, which allocated in af_ops->route_req.\n\nHere is the kmemleak stack:\n\nunreferenced object 0xffff8881198631c0 (size 240):\n  comm \"softirq\", pid 0, jiffies 4299266571 (age 1802.392s)\n  hex dump (first 32 bytes):\n    00 10 9b 03 81 88 ff ff 80 98 da bc ff ff ff ff  ................\n    81 55 18 bb ff ff ff ff 00 00 00 00 00 00 00 00  .U..............\n  backtrace:\n    [<ffffffffb93e8d4c>] kmem_cache_alloc+0x60c/0xa80\n    [<ffffffffba11b4c5>] dst_alloc+0x55/0x250\n    [<ffffffffba227bf6>] rt_dst_alloc+0x46/0x1d0\n    [<ffffffffba23050a>] __mkroute_output+0x29a/0xa50\n    [<ffffffffba23456b>] ip_route_output_key_hash+0x10b/0x240\n    [<ffffffffba2346bd>] ip_route_output_flow+0x1d/0x90\n    [<ffffffffba254855>] inet_csk_route_req+0x2c5/0x500\n    [<ffffffffba26b331>] tcp_conn_request+0x691/0x12c0\n    [<ffffffffba27bd08>] tcp_rcv_state_process+0x3c8/0x11b0\n    [<ffffffffba2965c6>] tcp_v4_do_rcv+0x156/0x3b0\n    [<ffffffffba299c98>] tcp_v4_rcv+0x1cf8/0x1d80\n    [<ffffffffba239656>] ip_protocol_deliver_rcu+0xf6/0x360\n    [<ffffffffba2399a6>] ip_local_deliver_finish+0xe6/0x1e0\n    [<ffffffffba239b8e>] ip_local_deliver+0xee/0x360\n    [<ffffffffba239ead>] ip_rcv+0xad/0x2f0\n    [<ffffffffba110943>] __netif_receive_skb_one_core+0x123/0x140\n\nCall dst_release() to free the dst memory when\ninet_csk_reqsk_queue_hash_add() return false in tcp_conn_request().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-57841"
                }
            ]
        }
    ]
}